/*----------------------------------------------------------------------*\
|                                                                        |
|               Программирование на языке высокого уровня                |
|                                                                        |
|------------------------------------------------------------------------|
|                                                                        |
|      Project type:  Win32 Console Application                          |
|      Project name:  Учебная практика                                   |
|      File name   :  Практика Аджалова 207Б.cpp                         |
|      Language    :  cpp MSVS 2019                                      |
|      Programmers :  M30-207Б-19                                        |
|                     Аджалова Севиль Фархадовна                         |
|      Created     :  18.06.2021                                         |
|      Modified by :  29.06.2021                                         |
|      Comment     :  Программа для построения графиков функций          |
|                                                                        |
|--------- Ф А Й Л Ы   В   Д И Р Е К Т О Р И И   П Р О Е К Т А ----------|
|                                                                        |
|   "Classes.h"       - объявление классов и прототипы функций           |
|   "Window.cpp"      - определение подпрограмм для работы в режиме окна |
|   "Classes.cpp"     - реализация методов классов и функций             |
|   "ClassDiagram.cd" - диаграмма классов                                |
|                                                                        |
\-----------------------------------------------------------------------*/

#pragma once 
#include "Classes.h"				//объявление классов

/************************************************************************\
|*                О С Н О В Н А Я    П Р О Г Р А М М А                  *|
\************************************************************************/
int main() {
	system("color FF");				//белый фон
	system("cls");					//очистка экрана
	double A = 0;					//левая граница отрезка
	double B = 0;					//правая граница отрезка
	double N = 0;					//количество интервалов
	int func = -1;					//код выбранной функции
	int prog = -1;					//код выбранной подпрограммы

	//инициализация функций
	Func Straight;					//прямая
	SinFunc Sinus;					//синус
	CosFunc Cosinus;				//косинус
	ExpFunc Exponent;				//экспонента
	ParabFunc Parabola;				//парабола
	LogFunc NaturalLog;				//натуральный логарифм
	SqrtFunc SquareRoot;			//квадратный корень

	//инициализация массива указателей на функции
	Func* funcs[7] = {};
	funcs[0] = &Straight;
	funcs[1] = &Sinus;
	funcs[2] = &Cosinus;
	funcs[3] = &Exponent;
	funcs[4] = &Parabola;
	funcs[5] = &NaturalLog;
	funcs[6] = &SquareRoot;

	//цикл обработки команд от пользователя
	do {
		//описание доступных функций
		cout << eng("\nВведите номер функции для начала работы:") << endl
			<< " 1  -  "<<funcs[0]->GetfName()<<";\n"
			<< " 2  -  " << funcs[1]->GetfName() << ";\n"
			<< " 3  -  " << funcs[2]->GetfName() << ";\n"
			<< " 4  -  " << funcs[3]->GetfName() << ";\n"
			<< " 5  -  " << funcs[4]->GetfName() << ";\n"
			<< " 6  -  " << funcs[5]->GetfName() << ";\n"
			<< " 7  -  " << funcs[6]->GetfName() << ";\n"
			<< eng(" 0  -  Завершение работы программы.\nВвод: ");
		
		//получение корректного кода функции
		cin >> func;
		while ((func > 7) || (func < 0)) {
			cout <<eng("\nВведена недопустимая команда.")
				<< eng(" Повторите попытку.\nВвод: ");
			cin >> func;
		}//end while

		//обработка кода функции
		switch (func) {
		case 0:						//завершение работы
			cout << eng("\n\nЗавершение работы...\n\n");
			return 0;

		default:					//выбрана функция
			//эхо-печать
			cout << eng("\nВыбрана функция y(x) = ")
				<< funcs[func - 1]->GetfName() << ".\n";
			break;
		}//end switch

		//описание доступных подпрограмм
		cout << eng("Введите номер операции для ее выполнения.")
			<< eng("Доступные операции :\n")
			<< eng(" 1  -  Построение графика функции;\n")
			<< eng(" 2  -  Табулирование функции;\n")
			<< eng(" 3  -  Поиск локальных экстремумов на отрезке;\n") 
			<< eng(" 4  -  Расчет значения функции в точке;\n")
			<< eng(" 5  -  Решение уравнения вида f(x) = 0;\n")
			<< eng(" 0  -  Завершение работы программы.\nВвод: ");

		//получение корректного кода подпрограммы
		cin >> prog;
		while ((prog > 5) || (prog < 0)) {
			cout << eng("\nВведена недопустимая команда.")
				<< eng(" Повторите попытку.\nВвод: ");
			cin >> prog;
		}//end while

		//обработка кода подпрограммы
		switch (prog) {
		case 0:						//завершение работы
			cout << eng("\n\nЗавершение работы...\n\n");
			return 0;

		case 1:						//построение графика
		case 2:						//табулирование функции
		case 3:						//поиск локальных экстремумов
		case 5:						//решение уравнения
			//эхо-печать
			cout << eng("\nВыбрана операция # ") << prog << ".\n";

			//описание запрашиваемых параметров
			cout << eng("Введите левую границу отрезка A");
			if (func == 6) {
				cout << " > 0";
			} else if (func == 7) {
				cout << " >= 0";
			}//end if
			cout << eng(".\nВвод: ");

			//получение корректной левой границы отрезка
			cin >> A;
			while (((func == 6) && (A <= 0)) 
				|| ((func == 7) && (A < 0))) {
				cout << eng("\nВведено недопустимое значение.")
					 << eng(" Повторите попытку.\nВвод: ");
				cin >> A;
			}//end while

			//описание запрашиваемых параметров
			cout << eng("Введите правую границу отрезка B >= ")
				 << A << eng(".\nВвод: ");
			
			//получение корректной правой границы отрезка
			cin >> B;
			while (A > B) {
				cout << eng("\nВведено недопустимое значение.")
					 << eng(" Повторите попытку.\nВвод: ");
				cin >> B;
			}//end while

			//эхо-печать
			cout << eng("Полученный отрезок") << ": [" << A
				 << "; " << B << "]\n";
			break;

		case 4:						//расчет значения функции в точке
			//эхо-печать
			cout << eng("\nВыбрана операция # ") << prog << ".\n";

			//описание запрашиваемых параметров
			cout << eng("Введите значение аргумента ")
				<< eng("для расчета значения функции.\nВвод:");

			//получение корректного значения аргумента
			cin >> A;
			break;
		}//end switch

		switch (prog) {
		case 1:						//построение графика
		case 5:						//решение уравнения
			//установка нового отрезка
			funcs[func - 1]->SetAB(A, B);
			break;

		case 2:						//табулирование функции
			if (A != B) {			//введен отрезок
				//описание запрашиваемых параметров
				cout << eng("Введите количество интервалов N > 0")
					<< endl << eng("Ввод: ");

				//получение корректного колиичества интервалов
				cin >> N;
				while (N < 1) {
					cout << eng("\nВведено недопустимое количество")
						<< eng(" интервалов. Повторите попытку.\nВвод: ");
					cin >> N;
				}//end while
			}//end if
			break;
		}//end switch

		//вызов выбранной подпрограммы для выбранной функции
		funcs[func - 1]->Caller(prog, A, B, N);

	} while (prog != 0);			//пока не выбран выход из программы

	return 0;						//завершение программы

}//end main()

/***************** End Of Практика Аджалова 207Б.CPP File ***************/